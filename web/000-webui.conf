<VirtualHost *:80>
    ProxyPreserveHost On

    # Servers to proxy the connection, or;
    # List of application servers:
    # Usage:
    # ProxyPass / http://[IP Addr.]:[port]/
    # ProxyPassReverse / http://[IP Addr.]:[port]/
    # Example:
    ProxyPass / http://0.0.0.0:8080/
    ProxyPassReverse / http://0.0.0.0:8080/

    ServerName localhost
</VirtualHost>

### to enable ssl, 
###  - uncomment the below virtualhost session
###  - create a directory named /etc/apache2/ssl/
###  - follow these instructions in your new directory http://www.akadia.com/services/ssh_test_certificate.html
#<VirtualHost *:443>
#    ProxyPreserveHost On
#    SSLEngine On
#    SSLProxyEngine On
#    SSLCertificateFile /etc/apache2/ssl/server.crt
#    SSLCertificateKeyFile /etc/apache2/ssl/server.key
#    ProxyPass / http://0.0.0.0:8080/
#    ProxyPassReverse / http://0.0.0.0:8080/
#</VirtualHost>

### to enable ssl with authentication - NOTE: only use one ssl option, 
###  - uncomment the below virtualhost session
###  - create a directory named /etc/apache2/ssl/
###  - follow these instructions in your new directory http://www.akadia.com/services/ssh_test_certificate.html
#<VirtualHost *:443>
#    ErrorLog /var/log/apache2/iDempiereProxy.error.log
#    LogLevel info
#    CustomLog /var/log/apache2/iDempiereProxy.log combined
#    # which db
#    DBDriver pgsql
#    DBDParams "host=localhost port=5432 user=adempiere password=YOUR_PASSWORD_HERE dbname=idempiere"
#    #Connection Pool Management
#    DBDMin 1
#    DBDKeep 2
#    DBDMax 10
#    DBDExptime 60
#    <Proxy *>
#        # core authentication and mod_auth_basic configuration
#        # for mod_authn_dbd
#        AuthType Basic
#        AuthName "Backend auth name"
#        AuthBasicProvider dbd
#        # core authorization configuration
#        Require valid-user
#        # mod_authn_dbd SQL query to authenticate a user
#        AuthDBDUserPWQuery \
#        "SELECT '{SHA}'||encode(digest(password,'sha1'),'base64') as password FROM ad_user WHERE name = %s"
#        AddDefaultCharset Off
#        Order deny,allow
#        Allow from all
#    </Proxy>
#    ProxyPreserveHost On
#    SSLEngine On
#    SSLProxyEngine On
#    SSLCertificateFile /etc/apache2/ssl/server.crt
#    SSLCertificateKeyFile /etc/apache2/ssl/server.key
#    ProxyPass / http://0.0.0.0:8080/
#    ProxyPassReverse / http://0.0.0.0:8080/
#</VirtualHost>